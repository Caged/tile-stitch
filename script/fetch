#!/usr/bin/env python

from owslib.wmts import WebMapTileService
import argparse
import os
from time import sleep

parser = argparse.ArgumentParser(description='Fetch tiles from Portlands WMTS server')
parser.add_argument('-x0', required=True, type=int, help="x tile index to start at")
parser.add_argument('-x1', required=True, type=int, help="x tile index to end at")
parser.add_argument('-y0', required=True, type=int, help="y tile index to start at")
parser.add_argument('-y1', required=True, type=int, help="y tile index to end at")
parser.add_argument('-z', '--zoom', required=True, help="zoom level to fetch")
parser.add_argument('-l', '--layer', default='Public_Aerial_Photos_Summer_2015')
parser.add_argument('-t', '--tilematrixset', default='GoogleMapsCompatible')
parser.add_argument('-f', '--force', default=False, help="Force fetching new image regardless if the tile exists on the local file system")

args = parser.parse_args()

print("Fetching %s tiles..." % ((args.x1 - args.x0) * (args.y1 + 1 - args.y0)))

wmts = WebMapTileService("https://www.portlandmaps.com/arcgis/rest/services/Public/Aerial_Photos_Summer_2015/MapServer/WMTS/1.0.0/WMTSCapabilities.xml")

for x in range(args.x0, args.x1 + 1):
    for y in range(args.y0, args.y1 + 1):
        tile_file = "tiles/%s/%s/%s.jpg" % (args.zoom, x, y)

        if os.path.isfile(tile_file) and not args.force:
            continue

        tile = wmts.gettile(
            layer=args.layer,
            tilematrixset=arg.tilematrixset,
            tilematrix=str(args.zoom),
            row=str(y),
            column=str(x),
            crs="EPSG:3857")

        os.makedirs(os.path.dirname(tile_file), exist_ok=True)
        with open(tile_file, "wb") as f:
            f.write(tile.read())
        sleep(0.5)
